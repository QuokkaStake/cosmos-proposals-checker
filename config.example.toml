# A path to a file that will store the state of the app.
state-path = "cosmos-proposals-checker-state.json"
# A path to a file that will store mutes of this app. Omitting it will disable the mute functionality.
mutes-path = "cosmos-proposals-checker-mutes.json"
# Interval to check and notify.
# Can be a cron-like interval (like "0 * * * *" for every hour),
# "@hourly"/"@daily" for hourly/daily intervals, or "@every 1h"
# for specifying intervals more granularly.
# See https://pkg.go.dev/github.com/robfig/cron?utm_source=godoc#hdr-CRON_Expression_Format for examples.
# Defaults to "@hourly"
interval = "@hourly"
# Timezone in which time (like undelegation finish time) will be displayed. Defaults to "Etc/GMT", so UTC+0
timezone = "Europe/Moscow"

# Logging configuration
[log]
# Log level. Defaults to "info". Set it to "debug" or "trace" to add more verbosity and for debugging.
level = "trace"
# Whether to write all logs in JSON instead of pretty-printing. Useful if you use a centralised logging
# solition, like ELK. Defaults to false.
json = false

# Per-chain config. There can be multiple chains.
[[chains]]
# Chain name, used internally. Required. Should be unique.
name = "bitsong"
# Pretty name that is used when reporting. Optional.
pretty-name = "Bitsong"
# Chain name in Keplr wallet, to generate links to a proposal. Optional.
keplr-name = "bitsong"
# Mintscan prefix, to generate links to a proposal/wallet. Optional.
mintscan-prefix = "bitsong"
# List of LCD endpoints to get data from. At least 1 is required. You can use
# multiple LCD endpoints, in case a single one fails.
lcd-endpoints = ["https://lcd-bitsong-app.cosmostation.io"]
# List of wallets to monitor. At least 1 is required.
wallets = [
    # Each wallet can have an address (required) and an alias (optional).
    { address = "bitsong14rvn7anf22e00vj5x3al4w50ns78s7n4t8yxcy", alias = "Validator wallet" },
    { address = "bitsong125hdkukw4pu2urhj4nv366q0avdqv24t0vprxs" },
]
# Some chains have a new proposals structure (v1) compared to an older one (v1beta1),
# when there are 2 or more actual proposals inside a single one (namely, Quicksilver).
# On such chains, querying proposals with an older endpoint when there are proposals
# with 2 or more proposals inside causes an error like this:
# "codespace sdk code 29: invalid type: can't convert a gov/v1 Proposal to gov/v1beta1 Proposal
# when amount of proposal messages is more than one". If you see this error, consider switching to
# a newer endpoint. Keep in mind that some chains do not implement the newer format.
# The possible values are: "v1" (newer format), "v1beta1" (older format).
# Defaults to "v1beta1"
proposals-type = "v1beta1"
# Custom explorer links patterns. They are overridden if mintscan-prefix is specified.
[chains.explorer]
# A pattern for proposal link for explorer, if there's no Mintscan support
# for the chain, but there is a custom explorer. %s is replaced by the proposal ID.
# Also optional.
proposal-link-pattern = "https://mintscan.io/bitsong/proposals/%s"
# A pattern for wallet links for the explorer. Also optional.
wallet-link-pattern = "https://mintscan.io/bitsong/account/%s"

[[chains]]
name = "sentinel"
pretty-name = "Sentinel"
keplr-name = "sentinel"
mintscan-prefix = "sentinel"
lcd-endpoints = ["https://lcd-sentinel-app.cosmostation.io", "https://lcd-sentinel.whispernode.com"]
wallets = [
    "sent1rw9wtyhsus7jvx55v3qv5nzun054ma6kas4u3l"
]

# PagerDuty notifier config.
[pagerduty]
# PagerDuty URL. You may need to override it if you use EU version of Pagerduty.
# Defaults to "https://events.pagerduty.com"
url = "https://events.eu.pagerduty.com"
# PagerDuty API key. If omitted, the PagerDuty reporter will be disabled.
api-key = "xxxyyyzzz"

# Telegram notifier config.
[telegram]
# Telegram bot token. If omitted, the Telegram reporter will be disabled.
token = "aaaa:bbbbb"
# Chat ID to write to. Check README for integration info.
chat = 123456